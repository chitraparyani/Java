/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RegisterParentRole;

import Business.EcoSystem;
import Business.Enterprise.AdoptionEnterprise;
import Business.Organization.ManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.RegisterParentOrganization;
import Business.ProspectiveParent.ProspectiveParent;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ManagementWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static userInterface.RegisterParentRole.RegisterParent1JPanel.sendEmail;

/**
 *
 * @author sneha
 */
public class ManageParentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageParentsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private RegisterParentOrganization organization;
    private AdoptionEnterprise enterprise;
    private EcoSystem business;

    public ManageParentsJPanel(JPanel userProcessContainer, UserAccount account, RegisterParentOrganization organization, AdoptionEnterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.organization = organization;
        this.business = business;
        lblEnterprise.setText(enterprise.getName());
        refreshData();
        populateParentTable();
        populateRequestTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateParentTable() {

        DefaultTableModel model = (DefaultTableModel) parentJTable.getModel();

        model.setRowCount(0);
        for (ProspectiveParent parent : organization.getProspectiveParentDirectory().getParentList()) {

            Object[] row = new Object[5];
            row[0] = parent;
            row[1] = parent.getParent1Age();
            row[2] = parent.getParent2();
            row[3] = parent.getParent2Age();
            row[4] = parent.getEmailId();
            System.out.println(parent.getEmailId());
            model.addRow(row);

        }
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            //String result = ((ManagementWorkRequest) request).getMessage();
            // String result = ((ManagementWorkRequest) request).getStatus();
            //row[3] = result == null ? "Waiting" : result;
            row[3] = null;
            row[4] = request.getParent().getEmailId();

            model.addRow(row);
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        parentJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        btnInitiateProcess = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();

        parentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parent1", "Age", "Parent2", "Age", "EmailId"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(parentJTable);

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parent", "Reciever", "Status", "Result", "EmailId"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        btnInitiateProcess.setText("InitiateProcess");
        btnInitiateProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitiateProcessActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Registered Parent Details:");

        jLabel2.setText("Request sent to Management to initiate adoption Process:");

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setText("Manage Parents:");

        lblEnterprise.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnInitiateProcess)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(37, 37, 37)
                                .addComponent(lblEnterprise))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnBack)))
                .addGap(391, 391, 391))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(lblEnterprise))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnInitiateProcess)
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(168, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInitiateProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitiateProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = parentJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        ProspectiveParent vi = (ProspectiveParent) parentJTable.getValueAt(selectedRow, 0);

        ManagementWorkRequest request = new ManagementWorkRequest();
        request.setParent(vi);
        System.out.println(request.getParent());
        System.out.println(request.getParent().getParent1Age());
        System.out.println(request.getParent().getEmailId());
        request.setSender(account);
        request.setStatus("Initiate Process");
        // JOptionPane.showMessageDialog(null, "Request sent to management ");
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof ManagementOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }

        JOptionPane.showMessageDialog(null, "Request message sent to management");
        sendEmail("parent2202@gmail.com", "Parent@2202", vi.getEmailId().toString(), "Request Initiated", "Dear " + vi.getParent1().toString() + "," + "Your Application for adopting child is under review. ");
        populateRequestTable();
    }//GEN-LAST:event_btnInitiateProcessActionPerformed


    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    public void refreshData() {

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o.getWorkQueue().getWorkRequestList() != null) {
                for (WorkRequest w : o.getWorkQueue().getWorkRequestList()) {
                    if (w.getReceiver() != null && account.getWorkQueue().getWorkRequestList() != null) {
                        for (WorkRequest Req : account.getWorkQueue().getWorkRequestList()) {
                            //w.setStatus(c);
                            if (w.getParent().equals(Req.getParent())) {
                                String status = Req.getStatus();
                                w.setStatus(status);
                            }
                        }
                    }

                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnInitiateProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable parentJTable;
    private javax.swing.JTable requestJTable;
    // End of variables declaration//GEN-END:variables
}
